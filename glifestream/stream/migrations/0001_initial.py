# Generated by Django 3.2.17 on 2023-08-25 13:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import glifestream.utils.time


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api', models.CharField(choices=[('selfposts', 'Self Posts'), ('webfeed', 'Webfeed'), ('mastodon', 'Mastodon'), ('twitter', 'Twitter'), ('youtube', 'YouTube'), ('vimeo', 'Vimeo'), ('flickr', 'Flickr')], db_index=True, default='feed', max_length=16, verbose_name='API')),
                ('cls', models.CharField(blank=True, max_length=16, null=True, verbose_name='Custom CSS Class')),
                ('url', models.CharField(blank=True, max_length=255, verbose_name='URL or Username')),
                ('creds', models.CharField(blank=True, max_length=128, null=True, verbose_name='Credentials')),
                ('name', models.CharField(max_length=48, verbose_name='Short name')),
                ('link', models.URLField(blank=True, verbose_name='WWW Link')),
                ('etag', models.CharField(blank=True, max_length=64, verbose_name='ETag')),
                ('last_modified', models.DateTimeField(blank=True, null=True, verbose_name='Last modified')),
                ('last_checked', models.DateTimeField(blank=True, null=True, verbose_name='Last checked')),
                ('display', models.CharField(choices=[('both', 'Title and Contents'), ('content', 'Contents only'), ('title', 'Title only')], default='both', max_length=8, verbose_name="Display entries'")),
                ('public', models.BooleanField(db_index=True, default=False, help_text='Public services are visible to anyone.', verbose_name='Public')),
                ('active', models.BooleanField(default=True, help_text='If not active, this service will not be further updated.', verbose_name='Active')),
                ('home', models.BooleanField(default=True, help_text='If unchecked, this stream will be still active, but hidden and thus visible only via custom lists.', verbose_name='Home visible')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ('-public', 'name', 'url'),
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('link', models.URLField(verbose_name='Link')),
                ('link_image', models.CharField(blank=True, max_length=128, verbose_name='Image Link')),
                ('content', models.TextField(blank=True, verbose_name='Contents')),
                ('date_published', models.DateTimeField(blank=True, db_index=True, default=glifestream.utils.time.now, verbose_name='Date published')),
                ('date_updated', models.DateTimeField(blank=True, default=glifestream.utils.time.now, verbose_name='Date updated')),
                ('date_inserted', models.DateTimeField(blank=True, default=glifestream.utils.time.now, editable=False, verbose_name='Date inserted')),
                ('guid', models.CharField(max_length=200, verbose_name='GUID')),
                ('author_name', models.CharField(blank=True, max_length=64, verbose_name="Author's Name")),
                ('author_email', models.EmailField(blank=True, max_length=254, verbose_name="Author's Email")),
                ('author_uri', models.CharField(blank=True, max_length=128, verbose_name="Author's URI")),
                ('geolat', models.DecimalField(blank=True, decimal_places=10, max_digits=13, null=True, verbose_name='Geo Latitude')),
                ('geolng', models.DecimalField(blank=True, decimal_places=10, max_digits=13, null=True, verbose_name='Geo Longitude')),
                ('idata', models.CharField(blank=True, editable=False, max_length=64, verbose_name='Internal data')),
                ('protected', models.BooleanField(default=False, help_text='Protect from possible overwriting by next update.', verbose_name='Protected')),
                ('active', models.BooleanField(default=True, help_text='If not active, this entry will not be shown.', verbose_name='Active')),
                ('draft', models.BooleanField(default=False, help_text='A draft is a post that is in progress. Only you will be able to see it.', verbose_name='Draft')),
                ('friends_only', models.BooleanField(default=False, help_text='Entry will only be visible to you and your friends.', verbose_name='Friends-only')),
                ('mblob', models.TextField(blank=True, editable=False, null=True, verbose_name='Media')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stream.service', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'Entry',
                'verbose_name_plural': 'Entries',
                'ordering': ('-date_published',),
                'unique_together': {('service', 'guid')},
            },
        ),
        migrations.CreateModel(
            name='Pshb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hash', models.CharField(max_length=20, unique=True, verbose_name='ID')),
                ('hub', models.CharField(max_length=128, verbose_name='Hub')),
                ('secret', models.CharField(blank=True, max_length=16, null=True, verbose_name='Secret')),
                ('expire', models.DateTimeField(blank=True, null=True, verbose_name='Expire')),
                ('verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stream.service', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'WebSub',
                'verbose_name_plural': 'WebSub',
                'ordering': ('service',),
                'unique_together': {('hash', 'service', 'hub')},
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='upload/%Y/%m/%d')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stream.entry', verbose_name='Entry')),
            ],
            options={
                'verbose_name': 'Media',
                'verbose_name_plural': 'Media',
                'unique_together': {('entry', 'file')},
            },
        ),
        migrations.CreateModel(
            name='List',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=48, verbose_name='Name')),
                ('slug', models.CharField(blank=True, editable=False, max_length=48, verbose_name='Slug')),
                ('services', models.ManyToManyField(to='stream.Service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'List',
                'verbose_name_plural': 'Lists',
                'ordering': ('name',),
                'unique_together': {('user', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stream.entry', verbose_name='Entry')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Favorite',
                'verbose_name_plural': 'Favorites',
                'ordering': ('-date_added',),
                'unique_together': {('user', 'entry')},
            },
        ),
    ]
